[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform sampler2D noise;
uniform vec4 hp_color:hint_color;
uniform vec4 damage_color:hint_color;
uniform float damage :hint_range(0.32, 0.57) = 0.30;

void fragment() {
	vec4 noiseColor = texture(noise, UV);
	float gate = smoothstep(damage, damage, noiseColor.r);
	vec3 albedo = mix(damage_color, hp_color, gate).rgb;
	COLOR = vec4(albedo, 1.0);
}
"

[sub_resource type="OpenSimplexNoise" id=4]
octaves = 9
period = 139.3
persistence = 0.859
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=6]
width = 256
height = 128
noise = SubResource( 4 )

[resource]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/hp_color = Color( 0, 0, 0, 1 )
shader_param/damage_color = Color( 0, 0, 0, 1 )
shader_param/damage = 0.33
shader_param/noise = SubResource( 6 )
